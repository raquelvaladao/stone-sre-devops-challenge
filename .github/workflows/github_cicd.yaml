name: CI

on:
  push:
    branches: ["dev"]
  pull_request:
    branches: ["dev"]

  workflow_dispatch:

jobs: 
  build:
    name: Build jar file
    runs-on: ubuntu-latest
    container: maven:3.6.3-openjdk-11
    defaults:
      run:
        working-directory: app-repo
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build and generate version info
        run: |
          mvn clean install
          mvn help:evaluate -Dexpression=project.name -q -DforceStdout > target/NAME
          mvn help:evaluate -Dexpression=project.version -q -DforceStdout > target/VERSION

      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: app-repo/target/
          if-no-files-found: error
  
  sonar:
    name: Sonar Test
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app-repo
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=stone-app -Dsonar.projectName='stone-app'
        
  publish:
    name: Build and Push Docker Image
    needs: sonar
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app-repo
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifacts
          path: app-repo/target/

      - name: Log into GitHub Container Registry
        run: echo ${{ secrets.REGISTRY_TOKEN }} | docker login ghcr.io -u raquelvaladao --password-stdin
        
      - name: Build Docker image
        run: docker build -t ghcr.io/raquelvaladao/stone-app:0.0.1 .

      - name: Push Docker image
        run: docker push ghcr.io/raquelvaladao/stone-app:0.0.1